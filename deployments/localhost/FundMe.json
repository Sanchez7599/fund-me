{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2a58be16845f399391459b1817a52db9cd893695785c3dd84aa37aa670471aae",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "925944",
    "logsBloom": "0x
    "blockHash": "0xa40a7b118db5640cf7ee6c1e9f73972572749450dfdd979ff0d3b429a10c53a8",
    "transactionHash": "0x2a58be16845f399391459b1817a52db9cd893695785c3dd84aa37aa670471aae",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "925944",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "83e48adc19ace4cda9edfc6895d5f85f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Nemanja\",\"details\":\"This implements price feed as a library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crown funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crown funding\\n *  @author Nemanja\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feed as a library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return priceFeed.version();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        /**in this scenario we keep reading from funders[] which is in storage -> $$$\\n         * we can make it cheaper by creating new array in memory and work with that\\n         * address[] memory fundersMemory = funders;\\n         */\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    //     /**\\n    //  *  @param x asd\\n    //  *  @return y asd\\n    //  */\\n\\n    // function test(uint256 x) public pure returns (uint256) {\\n    //     uint256 y = x + x;\\n    //     return y;\\n    // }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x8411eda4024870c35624bb732af23a6d31cf658e5c58d6b1e126fd0fad88fefe\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    // function getPrice(AggregatorV3Interface priceFeed)\\n    //     internal\\n    //     view\\n    //     returns (uint256)\\n    // {\\n    //     (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    //     // ETH/USD rate in 18 digit\\n    //     return uint256(answer * 10000000000);\\n    //     // or (Both will do the same thing)\\n    //     // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    // }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        uint256 ethPrice = uint256(answer * 10000000000);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x1b0e9d45dc341a6f54d640b87ae8efbecb81a48017ee68e9b1fb5b15327110a8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010d6380380620010d68339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c610f5e62000178600039600081816103c2015261064d0152610f5e6000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610aac565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610889565b610600565b60405161010e9190610aac565b60405180910390f35b34801561012357600080fd5b5061012c610618565b6040516101399190610aac565b60405180910390f35b34801561014e57600080fd5b50610157610625565b6040516101649190610a51565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064b565b6040516101999190610a36565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906108b6565b61066f565b6040516101d69190610a36565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ae90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a8c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610ae3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906108e3565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f05760006001828154811061046b5761046a610e14565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610d6d565b915050610448565b50600067ffffffffffffffff81111561050c5761050b610e43565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b5060019080519060200190610550929190610779565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057790610a21565b60006040518083038185875af1925050503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50509050806105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610a6c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190610910565b50505091505060006402540be400826107489190610b6a565b90506000670de0b6b3a764000086836107619190610c81565b61076b9190610b39565b905080935050505092915050565b8280548282559060005260206000209081019282156107f2579160200282015b828111156107f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610799565b5b5090506107ff9190610803565b5090565b5b8082111561081c576000816000905550600101610804565b5090565b60008135905061082f81610ecc565b92915050565b60008151905061084481610ee3565b92915050565b60008135905061085981610efa565b92915050565b60008151905061086e81610efa565b92915050565b60008151905061088381610f11565b92915050565b60006020828403121561089f5761089e610e72565b5b60006108ad84828501610820565b91505092915050565b6000602082840312156108cc576108cb610e72565b5b60006108da8482850161084a565b91505092915050565b6000602082840312156108f9576108f8610e72565b5b60006109078482850161085f565b91505092915050565b600080600080600060a0868803121561092c5761092b610e72565b5b600061093a88828901610874565b955050602061094b88828901610835565b945050604061095c8882890161085f565b935050606061096d8882890161085f565b925050608061097e88828901610874565b9150509295509295909350565b61099481610cdb565b82525050565b6109a381610d37565b82525050565b60006109b6600b83610ad2565b91506109c182610e77565b602082019050919050565b60006109d9601b83610ad2565b91506109e482610ea0565b602082019050919050565b60006109fc600083610ac7565b9150610a0782610ec9565b600082019050919050565b610a1b81610d17565b82525050565b6000610a2c826109ef565b9150819050919050565b6000602082019050610a4b600083018461098b565b92915050565b6000602082019050610a66600083018461099a565b92915050565b60006020820190508181036000830152610a85816109a9565b9050919050565b60006020820190508181036000830152610aa5816109cc565b9050919050565b6000602082019050610ac16000830184610a12565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610aee82610d17565b9150610af983610d17565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2e57610b2d610db6565b5b828201905092915050565b6000610b4482610d17565b9150610b4f83610d17565b925082610b5f57610b5e610de5565b5b828204905092915050565b6000610b7582610ced565b9150610b8083610ced565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bbf57610bbe610db6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bfc57610bfb610db6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c3957610c38610db6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c7657610c75610db6565b5b828202905092915050565b6000610c8c82610d17565b9150610c9783610d17565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd057610ccf610db6565b5b828202905092915050565b6000610ce682610cf7565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d4282610d49565b9050919050565b6000610d5482610d5b565b9050919050565b6000610d6682610cf7565b9050919050565b6000610d7882610d17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dab57610daa610db6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610ed581610cdb565b8114610ee057600080fd5b50565b610eec81610ced565b8114610ef757600080fd5b50565b610f0381610d17565b8114610f0e57600080fd5b50565b610f1a81610d21565b8114610f2557600080fd5b5056fea2646970667358221220c6530041b0babc1723db0c4613b78d017dd0c47a3a3a07fdddba4714ef5a790664736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610aac565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610889565b610600565b60405161010e9190610aac565b60405180910390f35b34801561012357600080fd5b5061012c610618565b6040516101399190610aac565b60405180910390f35b34801561014e57600080fd5b50610157610625565b6040516101649190610a51565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064b565b6040516101999190610a36565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906108b6565b61066f565b6040516101d69190610a36565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106ae90919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a8c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610ae3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906108e3565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104f05760006001828154811061046b5761046a610e14565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e890610d6d565b915050610448565b50600067ffffffffffffffff81111561050c5761050b610e43565b5b60405190808252806020026020018201604052801561053a5781602001602082028036833780820191505090505b5060019080519060200190610550929190610779565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057790610a21565b60006040518083038185875af1925050503d80600081146105b4576040519150601f19603f3d011682016040523d82523d6000602084013e6105b9565b606091505b50509050806105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610a6c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061067f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190610910565b50505091505060006402540be400826107489190610b6a565b90506000670de0b6b3a764000086836107619190610c81565b61076b9190610b39565b905080935050505092915050565b8280548282559060005260206000209081019282156107f2579160200282015b828111156107f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610799565b5b5090506107ff9190610803565b5090565b5b8082111561081c576000816000905550600101610804565b5090565b60008135905061082f81610ecc565b92915050565b60008151905061084481610ee3565b92915050565b60008135905061085981610efa565b92915050565b60008151905061086e81610efa565b92915050565b60008151905061088381610f11565b92915050565b60006020828403121561089f5761089e610e72565b5b60006108ad84828501610820565b91505092915050565b6000602082840312156108cc576108cb610e72565b5b60006108da8482850161084a565b91505092915050565b6000602082840312156108f9576108f8610e72565b5b60006109078482850161085f565b91505092915050565b600080600080600060a0868803121561092c5761092b610e72565b5b600061093a88828901610874565b955050602061094b88828901610835565b945050604061095c8882890161085f565b935050606061096d8882890161085f565b925050608061097e88828901610874565b9150509295509295909350565b61099481610cdb565b82525050565b6109a381610d37565b82525050565b60006109b6600b83610ad2565b91506109c182610e77565b602082019050919050565b60006109d9601b83610ad2565b91506109e482610ea0565b602082019050919050565b60006109fc600083610ac7565b9150610a0782610ec9565b600082019050919050565b610a1b81610d17565b82525050565b6000610a2c826109ef565b9150819050919050565b6000602082019050610a4b600083018461098b565b92915050565b6000602082019050610a66600083018461099a565b92915050565b60006020820190508181036000830152610a85816109a9565b9050919050565b60006020820190508181036000830152610aa5816109cc565b9050919050565b6000602082019050610ac16000830184610a12565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610aee82610d17565b9150610af983610d17565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2e57610b2d610db6565b5b828201905092915050565b6000610b4482610d17565b9150610b4f83610d17565b925082610b5f57610b5e610de5565b5b828204905092915050565b6000610b7582610ced565b9150610b8083610ced565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bbf57610bbe610db6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bfc57610bfb610db6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c3957610c38610db6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c7657610c75610db6565b5b828202905092915050565b6000610c8c82610d17565b9150610c9783610d17565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd057610ccf610db6565b5b828202905092915050565b6000610ce682610cf7565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d4282610d49565b9050919050565b6000610d5482610d5b565b9050919050565b6000610d6682610cf7565b9050919050565b6000610d7882610d17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dab57610daa610db6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610ed581610cdb565b8114610ee057600080fd5b50565b610eec81610ced565b8114610ef757600080fd5b50565b610f0381610d17565b8114610f0e57600080fd5b50565b610f1a81610d21565b8114610f2557600080fd5b5056fea2646970667358221220c6530041b0babc1723db0c4613b78d017dd0c47a3a3a07fdddba4714ef5a790664736f6c63430008070033",
  "devdoc": {
    "author": "Nemanja",
    "details": "This implements price feed as a library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crown funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}